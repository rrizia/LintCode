/*
There is an integer array which has the following features:

The numbers in adjacent positions are different.
A[0] < A[1] && A[A.length - 2] > A[A.length - 1].
We define a position P is a peek if:

A[P] > A[P-1] && A[P] > A[P+1]
Find a peak element in this array. Return the index of the peak.

Given [1, 2, 1, 3, 4, 5, 7, 6]

Return index 1 (which is number 2) or 6 (which is number 7)
*/

class Solution {
    /**
     * @param A: An integers array.
     * @return: return any of peek positions.
     */
    public int findPeak(int[] A) {
        if(A == null || A.length == 0) return -1;
        else if(A.length == 1 || A[0] > A[1]) return 0;
        else if(A[A.length-1] > A[A.length-2]) return A.length-1;
        else{
            for(int i = 1; i<A.length-1; i++){
                if(A[i] > A[i-1] && A[i] > A[i+1])
                    return i;
            }
            return -1;
        }
    }
}
