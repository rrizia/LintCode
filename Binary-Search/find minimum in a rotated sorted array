/*
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

Given [4, 5, 6, 7, 0, 1, 2] return 0
*/

public class Solution {
    /**
     * @param num: a rotated sorted array
     * @return: the minimum number in the array
     */
    public int findMin(int[] num) {
        if(num == null || num.length == 0) return -1;
        int l = 0;
        int h = num.length-1;
        
        while(l<h){
            int m = l+(h-l)/2;
            if(num[m] < num[h])
                h = m;
            else
                l = m+1;
        }
        return num[l];
    }
}
