/*
Given a sorted array of n integers, find the starting and ending position of a given target value.

If the target is not found in the array, return [-1, -1].

Given [5, 7, 7, 8, 8, 10] and target value 8,
return [3, 4].
*/

public class Solution {
    /** 
     *@param A : an integer sorted array
     *@param target :  an integer to be inserted
     *return : a list of length 2, [index1, index2]
     */
    public int[] searchRange(int[] A, int target) {
        int[] result = new int[2];
        Arrays.fill(result, -1);
        if(A == null || A.length == 0) return result;
        
        int s = 0;
        int e = A.length-1;
        
        while(s<=e){
            int m = s+(e-s)/2;
            if(A[m] == target) {
                result[0] = m;
                e = m-1;
            }else if(A[m] > target)
                e = m-1;
            else s = m+1;
        }
        
        s = 0;
        e = A.length-1;
        while(s<=e){
            int m = s+(e-s)/2;
            if(A[m] == target) {
                result[1] = m;
                s = m+1;
            }else if(A[m] > target)
                e = m-1;
            else s = m+1;
        }
        return result;
    }
}
