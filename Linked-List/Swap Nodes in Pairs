/*
Given a linked list, swap every two adjacent nodes and return its head.
Given 1->2->3->4, you should return the list as 2->1->4->3.
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    /**
     * @param head a ListNode
     * @return a ListNode
     */
    public ListNode swapPairs(ListNode head) {
       if(head == null || head.next == null) return head;
       ListNode l1 = head;
       ListNode l2 = head.next;
       ListNode temp = l2.next;
       
       l2.next = l1;
       l1.next = swapPairs(temp);
       return l2;
    }
}
