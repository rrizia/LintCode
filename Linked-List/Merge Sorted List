/**
 * Definition for ListNode.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int val) {
 *         this.val = val;
 *         this.next = null;
 *     }
 * }
 */ 
public class Solution {
    /**
     * @param ListNode l1 is the head of the linked list
     * @param ListNode l2 is the head of the linked list
     * @return: ListNode head of linked list
     */
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
       if(l1 == null || l2 == null) return (l1==null)?l2:l1;
       ListNode nH = null;
       ListNode nT = null;
       
       while(l1!=null && l2!=null){
           if(l1.val < l2.val){
               ListNode temp = l1.next;
               l1.next = null;
               if(nT == null){
                   nH = l1;
                   nT = l1;
               }else{
                   nT.next = l1;
                   nT = l1;
               }
               l1 = temp;
           }else{
               ListNode temp = l2.next;
               l2.next = null;
               if(nT == null){
                   nH = l2;
                   nT = l2;
               }else{
                   nT.next = l2;
                   nT = l2;
               }
               l2 = temp;
           }
       }
       
        if(l1!=null)
            nT.next = l1;
        else if(l2!=null)
            nT.next = l2;
        return nH;
    }
}
