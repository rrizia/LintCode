/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;      
 *     }
 * }
 */
public class Solution {
    /**
     * @param l1: the first list
     * @param l2: the second list
     * @return: the sum list of l1 and l2 
     */
    public ListNode addLists(ListNode l1, ListNode l2) {
        if(l1 == null || l2 == null) return (l1==null)? l2: l1;
        return addLists(l1, l2, 0);
    }
    
    public ListNode addLists(ListNode l1, ListNode l2, int c) {
        if(l1 == null && l2 == null && c == 0) return null;
        int sum = c;
        if(l1!=null){
            sum+=l1.val;
        }
        if(l2!=null)
            sum+=l2.val;
        
        ListNode cur = null;
        if(l1!=null){
            l1.val = sum%10;
            cur = l1;
        }else if(l2!=null){
           l2.val = sum%10;
           cur = l2;
        }else{
            cur = new ListNode(sum%10);
        }
        if(l1!=null || l2!=null){
            cur.next = addLists(l1!=null?l1.next:null, l2!=null?l2.next:null, sum/10);
        }
        return cur;
    }
}
