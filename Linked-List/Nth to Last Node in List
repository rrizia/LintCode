/*
Find the nth to last element of a singly linked list. 

The minimum number of nodes in list is n.

Given a List  3->2->1->5->null and n = 2, return node  whose value is 1.
*/

/**
 * Definition for ListNode.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int val) {
 *         this.val = val;
 *         this.next = null;
 *     }
 * }
 */ 
public class Solution {
    /**
     * @param head: The first node of linked list.
     * @param n: An integer.
     * @return: Nth to last node of a singly linked list. 
     */
    ListNode nthToLast(ListNode head, int n) {
        if(head == null)  return head;
        
        ListNode f = head;
        int c = 1;
        while(c<n){
            f = f.next;
            c++;
        }
        
        ListNode b = head;
        while(f.next!=null){
            f = f.next;
            b = b.next;
        }
        return b;
    }
}
