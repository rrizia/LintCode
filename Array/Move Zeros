/*
 Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].

Note:

    You must do this in-place without making a copy of the array.
    Minimize the total number of operations.

*/
public class Solution {
    public void moveZeroes(int[] nums) {
        if(nums == null || nums.length == 0) return;
        int zIdx = -1;
        int countZeros = 0;
        
        for(int i = 0; i<nums.length; i++){
            if(nums[i] == 0){
                if(zIdx == -1)
                    zIdx = i;
                countZeros++;
            }
        }
        
        if(countZeros == 0) return;
        int end = nums.length - countZeros;
        
        for(int i = 0; i<nums.length; i++){
            if(nums[i] != 0 && i>zIdx){
                nums[zIdx] = nums[i];
                zIdx++;
            }
            if(i>=end){
                nums[i] = 0;
            }
        }
    }
}
