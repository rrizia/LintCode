/*
Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target?

Find all unique quadruplets in the array which gives the sum of target.

Given array S = {1 0 -1 0 -2 2}, and target = 0. A solution set is:

(-1, 0, 0, 1)
(-2, -1, 1, 2)
(-2, 0, 0, 2)
*/

public class Solution {
    /**
     * @param numbers : Give an array numbersbers of n integer
     * @param target : you need to find four elements that's sum of target
     * @return : Find all unique quadruplets in the array which gives the sum of
     *           zero.
     */
    public ArrayList<ArrayList<Integer>> fourSum(int[] nums, int target) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if(nums == null || nums.length <4) return result;
        Arrays.sort(nums);
        for(int i = 0; i<nums.length-3; i++){
            if( i == 0 || nums[i] > nums[i-1]){
                for(int j = i+1; j<nums.length - 2; j++){
                    if(j == i+1 || nums[j] > nums[j-1]){
                        int k = j+1;
                        int l = nums.length-1;
                        while(k<l){
                            int sum = nums[i]+nums[j]+nums[k]+nums[l];
                            if(sum == target){
                                ArrayList<Integer> temp = new ArrayList<Integer>();
                                temp.add(nums[i]);
                                temp.add(nums[j]);
                                temp.add(nums[k]);
                                temp.add(nums[l]);
                                result.add(temp);
                                k++;
                                l--;
                                while(k<l && nums[k] == nums[k-1]) k++;
                                while(k<l && nums[l] == nums[l+1]) l--;
                            }else if(sum < target){
                                k++;
                                while(k<l && nums[k] == nums[k-1]) k++;
                            }else{
                                l--;
                                while(k<l && nums[l] == nums[l+1]) l--;
                            }
                        }
                    }
                }
            }
        }
        return result;
    }
}
