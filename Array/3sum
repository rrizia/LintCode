/*
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? 
Find all unique triplets in the array which gives the sum of zero.
For example, given array S = {-1 0 1 2 -1 -4}, A solution set is:

(-1, 0, 1)
(-1, -1, 2)
*/

public class Solution {
    /**
     * @param numbers : Give an array numbers of n integer
     * @return : Find all unique triplets in the array which gives the sum of zero.
     */
    public ArrayList<ArrayList<Integer>> threeSum(int[] nums) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if(nums == null || nums.length <3 ) return result;
        Arrays.sort(nums);
        
        for(int i = 0; i<nums.length-2; i++){
            if(i == 0 || nums[i] > nums[i-1]){
                int j = i+1;
                int k = nums.length-1;
                while(j<k){
                    int sum = nums[i]+nums[j]+nums[k];
                    if(sum == 0){
                        ArrayList<Integer> l = new ArrayList<Integer>();
                        l.add(nums[i]);
                        l.add(nums[j]);
                        l.add(nums[k]);
                        result.add(l);
                        j++;
                        k--;
                        while(j<k && nums[j] == nums[j-1]) j++;
                        while(j<k && nums[k] == nums[k+1]) k--;
                    }else if(sum <0){
                        j++;
                        while(j<k && nums[j] == nums[j-1]) j++;
                    }else{
                        k--;
                        while(j<k && nums[k] == nums[k+1]) k--;
                    }
                }
            }
        }
        return result;
    }
}
