class Solution {
    /**
     * @param prices: Given an integer array
     * @return: Maximum profit
     */
    public int maxProfit(int[] prices) {
        if(prices == null || prices.length == 0) return 0;
        
        int[] left  = new int[prices.length];
        int[] right = new int[prices.length];
        
        int minEle = prices[0];
        left[0] = 0;
        
        for(int i = 1; i<prices.length; i++){
            minEle  = Math.min(minEle, prices[i]);
            left[i] = Math.max(left[i-1], prices[i]-minEle);
        }
        
        int maxEle = prices[prices.length-1];
        right[right.length-1] = 0;
        for(int i = right.length-2; i>=0; i--){
            maxEle = Math.max(maxEle, prices[i]);
            right[i] = Math.max(right[i+1], maxEle - prices[i]);
        }
        
        int max = Integer.MIN_VALUE;
        for(int i = 0; i<left.length; i++){
            max=  Math.max(max, left[i]+right[i]);
        }
        return max;
    }
};
