/*
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. 
Return the sum of the three integers.
For example, given array S = {-1 2 1 -4}, and target = 1. The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
*/
public class Solution {
    /**
     * @param numbers: Give an array numbers of n integer
     * @param target : An integer
     * @return : return the sum of the three integers, the sum closest target.
     */
    public int threeSumClosest(int[] nums ,int target) {
        int closestSum = Integer.MAX_VALUE;
        int closestDiff = Integer.MAX_VALUE;
        Arrays.sort(nums);
        
        for(int i = 0; i<nums.length-2; i++){
            if(i == 0 || nums[i] > nums[i-1]){
                int j = i+1;
                int k = nums.length-1;
                while(j<k){
                    int sum = nums[i]+nums[j]+nums[k];
                    
                    if(sum == target){
                        return sum;
                    }else if(sum<target){
                        j++;
                        while(j<k && nums[j] == nums[j-1]) j++;
                    }else{
                        k--;
                        while(j<k && nums[k] == nums[k+1]) k--;
                    }
                    int diff = Math.abs(target - sum);
                    if(diff < closestDiff){
                        closestDiff = diff;
                        closestSum = sum;
                    }
                }
            }
        }
        return closestSum;
    }
}
