/*
Given an array of integers, the majority number is the number that occurs more than 1/3 of the size of the array.

Find it.

Given [1, 2, 1, 2, 1, 3, 3], return 1.
*/

public class Solution {
    /**
     * @param nums: A list of integers
     * @return: The majority number that occurs more than 1/3
     */
    public int majorityNumber(ArrayList<Integer> nums) {
        if(nums == null || nums.size() == 0) return -1;
        int c1 = 0;
        Integer n1 = null;
        int c2 = 0;
        Integer n2 = null;
        
        for(int i = 0; i<nums.size(); i++){
            if(n1!=null && nums.get(i) == n1.intValue()){
                c1++;
            }else if(n2!=null && nums.get(i) == n2.intValue()){
                c2++;
            }else if(c1 == 0){
                n1 = nums.get(i);
                c1 = 1;
            }else if(c2 == 0){
                n2 = nums.get(i);
                c2 = 1;
            }else{
                c1--;
                c2--;
            }
        }
        
        c1 = 0;
        c2 = 0;
        
        for(int i = 0; i<nums.size(); i++){
            if(nums.get(i) == n1.intValue()) c1++;
            else if(nums.get(i) == n2.intValue()) c2++;
        }
        
        if(c1> nums.size()/3) return n1.intValue();
        else if(c2>nums.size()/3) return n2.intValue();
        return -1;
    }
}
