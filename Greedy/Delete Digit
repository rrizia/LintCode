public class Solution {
    /**
     * Go from left (most significant) to right, delete the first number that is larger than its succeeding number.

This equals replacing a larger number with a smaller number, at the most significant position so as to producing the smallest number.

for e.g. 178542 -> 17542 -> 1542 -> 142 -> 12
     *@param A: A positive integer which has N digits, A is a string.
     *@param k: Remove k digits.
     *@return: A string
     */
    public class Solution {
    /**
     * Go from left (most significant) to right, delete the first number that is larger than its succeeding number.

This equals replacing a larger number with a smaller number, at the most significant position so as to producing the smallest number.

for e.g. 178542 -> 17542 -> 1542 -> 142 -> 12
     *@param A: A positive integer which has N digits, A is a string.
     *@param k: Remove k digits.
     *@return: A string
     */
    public String DeleteDigits(String A, int k) {
        if(A == null || A.length() == 0 || k<=0 || k>A.length()) return A;
        else if(k == A.length()) return "";
        
        for(int i = 0; i<k; i++){
            for(int j = 0; j<A.length(); j++){
                if(j == A.length()-1 || A.charAt(j) > A.charAt(j+1)){
                    A = A.substring(0, j)+A.substring(j+1);
                    break;
                }
            }
        }
        int i = 0;
        while(i<A.length()-1 && A.charAt(i) == '0') i++;
        return A.substring(i);
    }
}
