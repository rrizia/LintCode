/*
Given a list of integers, which denote a permutation.

Find the next permutation in ascending order.

For [1,3,2,3], the next permutation is [1,3,3,2]

For [4,3,2,1], the next permutation is [1,2,3,4]
*/

public class Solution {
    /**
     * @param nums: an array of integers
     * @return: return nothing (void), do not return anything, modify nums in-place instead
     */
    public int[] nextPermutation(int[] nums) {
        if(nums == null || nums.length == 0) return nums;
        int firstDec = nums.length-1;
       
        while(firstDec >0 && nums[firstDec] <= nums[firstDec-1])
            firstDec --;
        firstDec--;
        
        if(firstDec >= 0){
            int smallestGreater = firstDec+1;
            while(smallestGreater < nums.length && nums[smallestGreater] > nums[firstDec])
                smallestGreater++;
            smallestGreater--;
            
            int temp = nums[smallestGreater];
            nums[smallestGreater] = nums[firstDec];
            nums[firstDec] = temp;
            
            int i = firstDec+1;
            int j = nums.length-1;
             while(i<j){
                temp = nums[i];
                nums[i++] = nums[j];
                nums[j--] = temp;
            }
        }else{
            int i = 0;
            int j = nums.length-1;
            while(i<j){
                int temp = nums[i];
                nums[i++] = nums[j];
                nums[j--] = temp;
            }
        }       
        return nums;
    }
}
