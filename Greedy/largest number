/*
Given a list of non negative integers, arrange them such that they form the largest number.
Given [1, 20, 23, 4, 8], the largest formed number is 8423201.
10, 1 - 101, 110 [normal sorting uses lexicographic sorting, thus 80 and 8 has same weight, but 8 should come after 80]
*/

public class Solution {
    /**
     *@param num: A list of non negative integers
     *@return: A string
     */
    public String largestNumber(int[] num) {
        if(num == null || num.length == 0) return "";
        
        String[] strs = new String[num.length];
        for(int i = 0; i<num.length; i++){
            strs[i] = String.valueOf(num[i]);
        }
        
        Arrays.sort(strs, new StringComparator());
        StringBuilder sb = new StringBuilder();
        for(int i = strs.length-1; i>=0; i--){
            sb.append(strs[i]);
        }
        
        while(sb.length() > 1 && sb.charAt(0) == '0') sb.deleteCharAt(0);
        return sb.toString();
    }
    
    class StringComparator implements Comparator<String>{
        public int compare(String s1, String s2){
            String lTor = s1+s2;
            String rTol = s2+s1;
            
            return lTor.compareTo(rTol);
        }
    }
}
