/*
There are N gas stations along a circular route, where the amount of gas at station i is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.

Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.

Given 4 gas stations with gas[i]=[1,1,3,1], and the cost[i]=[2,2,1,1]. The starting gas station's index is 2.
*/

public class Solution {
    /**
     * @param gas: an array of integers
     * @param cost: an array of integers
     * @return: an integer
     */
    public int canCompleteCircuit(int[] gas, int[] cost) {
        if(gas == null || cost == null || gas.length == 0 || cost.length == 0) return -1;
        else if (gas.length != cost.length) return -1;
        
        int preRemaining = 0;
        int start = 0;
        int total = 0; //keeps track of total remaining gas
        
        for(int i = 0; i<gas.length; i++){
            int remaining = gas[i] - cost[i];
            // To find the start index
            if(preRemaining >=0){
                preRemaining += remaining;
            }else{
                preRemaining = remaining;
                start = i;
            }
            total+=remaining;
        }
        if(total >= 0) return start;
        return -1;
    }
}
