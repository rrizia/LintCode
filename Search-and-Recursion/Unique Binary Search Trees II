/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @paramn n: An integer
     * @return: A list of root
     */
    public List<TreeNode> generateTrees(int n) {
        return generateTrees(1, n);
    }
    
    public List<TreeNode> generateTrees(int s, int e){
        List<TreeNode> result = new ArrayList<TreeNode>();
        if(s>e) {
            result.add(null);    
        }
        else{
            for(int i = s; i<=e; i++){
                List<TreeNode> left  = generateTrees(s, i-1);
                List<TreeNode> right = generateTrees(i+1, e);
                for(TreeNode l: left){
                    for(TreeNode r: right){
                        TreeNode t = new TreeNode(i);
                        t.left = l;
                        t.right = r;
                        result.add(t);
                    }
                }
            }
        }
        return result;
    }
}
