public class Solution {
    /**
     * @param n a number
     * @return Gray code
     */
    public ArrayList<Integer> grayCode(int n) {
        ArrayList<Integer> result  = new ArrayList<Integer>();
        if(n<0) return result;
        else if(n == 0){
            result.add(0);
            return result;
        }
        ArrayList<String> binStr = grayCodeH(n);
        binToDec(binStr, result);
        return result;
    }
    
    public void binToDec(ArrayList<String> binStr, ArrayList<Integer> result){
        for(String str: binStr){
            result.add(binToDec(str));
        }
    }
    
    public int binToDec(String s){
        if(s == null || s.length() == 0) return 0;
        int p = 0;
        int num = 0;
        for(int i = s.length()-1; i>=0; i--){
            int d = (int)(s.charAt(i) - '0');
            num+= d*Math.pow(2, p++);
        }
        return num;
    }
    
    public ArrayList<String> grayCodeH(int n){
        ArrayList<String> result = new ArrayList<String>();
        if(n == 1){
            result.add("0");
            result.add("1");
        }else{
            ArrayList<String> rest = grayCodeH(n-1);
            for(String temp: rest){
                result.add('0'+temp);
            }
            Collections.reverse(rest);
            for(String temp: rest){
                result.add('1'+temp);
            }
        }
        return result;
    }
}
