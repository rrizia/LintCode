/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: Inorder in ArrayList which contains node values.
     */
    public ArrayList<Integer> inorderTraversal(TreeNode root) {
        ArrayList<Integer> result = new ArrayList<Integer>();
        if(root == null) return result;
        
        Stack<TreeNode> st = new Stack<TreeNode>();
        while(root!=null){
            st.push(root);
            root = root.left;
        }
        
        while(!st.isEmpty()){
            TreeNode cur = st.pop();
            result.add(cur.val);
            if(cur.right!=null){
                cur = cur.right;
                while(cur!=null){
                    st.push(cur);
                    cur = cur.left;
                }
            }
        }
        return result;
    }
}
