/*
special case [1, -1], a or b or both can be negative
Determine the number of bits required to flip if you want to convert integer n to integer m.

Given n = 31 (11111), m = 14 (01110), return 2.
*/

class Solution {
    /**
     *@param a, b: Two integer
     *return: An integer
     */
    public static int bitSwapRequired(int a, int b) {
        if(a == b) return 0;
        int n = a ^ b;
        int count = 0;
        // doing n != 0 instead of n>0, because a or b can be negative
        //when a and b has different sign and you do xor, n will be negative
        while(n!=0){
            n = n & (n-1);
            count++;
        }
        return count;
    }
};
