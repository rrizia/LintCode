public class Solution {
    /**
     * @param s a string,  encoded message
     * @return an integer, the number of ways decoding
     */
    public int numDecodings(String s) {
        if(s == null || s.length() == 0) return 0;
        int[] dp = new int[s.length()+1];
        dp[0] = 1;
        
        if(isValid(s.substring(0, 1)))
            dp[1] = 1;
        else
            dp[1] = 0;
        
        for(int i = 2; i<=s.length(); i++){
            if(isValid(s.substring(i-1, i)))
                dp[i] += dp[i-1];
            if(isValid(s.substring(i-2, i)))
                dp[i] += dp[i-2];
        }
        return dp[s.length()];
    }
    
    public boolean isValid(String s){
        if(s == null || s.length() == 0) return false;
        else if(s.equals("0")) return false;
        else if(s.length() > 1 && s.charAt(0) == '0') return false;
        int num = Integer.parseInt(s);
        if(num>=1 && num <=26) return true;
        return false;
    }
}
