/*
Given two strings, find the longest common substring.

Return the length of it.

Given A = "ABCD", B = "CBCE", return 2.
*/

public class Solution {
    /**
     * @param A, B: Two string.
     * @return: the length of the longest common substring.
     */
    public int longestCommonSubstring(String A, String B) {
        if(A == null || B == null || A.length() == 0 || B.length() == 0) return 0;
        HashSet<String> map = new HashSet<String>();
        
        for(int i = 0; i<A.length(); i++){
            for(int j = i+1; j<=A.length(); j++){
                String cur = A.substring(i, j);
                if(!map.contains(cur)){
                    map.add(cur);
                }
            }
        }
        
        int maxLen = 0;
        for(int i = 0; i<B.length(); i++){
            for(int j = i+1; j<=B.length(); j++){
                String cur = B.substring(i, j);
                if(map.contains(cur)){
                    maxLen = Math.max(maxLen, cur.length());
                }
            }
        }
        return maxLen;
    }
}
