/*
Given an array of integers and a number k, the majority number is the number that occurs more than 1/k of the size of the array.

Find it.
Given [3,1,2,3,2,3,3,4,4,4] and k=3, return 3.
*/

public class Solution {
    /**
     * @param nums: A list of integers
     * @param k: As described
     * @return: The majority number
     */
    public int majorityNumber(ArrayList<Integer> nums, int k) {
        if(nums == null || nums.size() == 0 || k<=0) return -1;
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i: nums){
            if(!map.containsKey(i)){
                if(map.size() <= k-1){
                    map.put(i, 1);
                }else{
                    decreaseCount(map);
                }
            }else{
                map.put(i, map.get(i)+1);
            }
        }
        
        if(map.size() == 0)
            return -1;
        
        for(int key:map.keySet()){
            map.put(key, 0);
        }
        
        for(int i: nums){
            if(map.containsKey(i)){
                map.put(i, map.get(i)+1);
            }
        }
        
        int maxKey = 0;
		int maxCount = 0;
		for (int key : map.keySet()) {
			if (map.get(key) > maxCount) {
				maxCount = map.get(key);
				maxKey = key;
			}
		}
		return maxKey;
    }
    
    public void decreaseCount(Map<Integer, Integer> map){
        //Set<Integer> set = map.keySet();
        List<Integer> removeList = new ArrayList<Integer>();
        for(int i: map.keySet()){
            if(map.get(i) == 1)
                removeList.add(i);
            else{
                map.put(i, map.get(i)-1);
            }
        }
        
        for(int i: removeList){
            map.remove(i);
        }
    }
}
