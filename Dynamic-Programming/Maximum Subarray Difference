/*
Given an array with integers.

Find two non-overlapping subarrays A and B, which |SUM(A) - SUM(B)| is the largest.

Return the largest difference.

For [1, 2, -3, 1], return 6.
1+2 = 3
-3

diff = 6

Challenge
O(n) time and O(n) space.

*/

public class Solution {
    /**
     * @param nums: A list of integers
     * @return: An integer indicate the value of maximum difference between two
     *          Subarrays
     */
    public int maxDiffSubArrays(int[] nums) {
        if(nums == null || nums.length == 0) return 0;
        int l = nums.length;
        int[] leftMin = new int[l];
        int[] leftMax = new int[l];
        
        leftMin[0] = nums[0];
        leftMax[0] = nums[0];
        
        for(int i = 1; i<l; i++){
            leftMin[i] = Math.min(leftMin[i-1]+nums[i], nums[i]);
            leftMax[i] = Math.max(leftMax[i-1]+nums[i], nums[i]);
        }
        
        int curMin = leftMin[0];
        int curMax = leftMax[0];
        
        for(int i = 1; i<l; i++){
            if(leftMin[i] > curMin)
                leftMin[i] = curMin;
            if(leftMax[i] < curMax)
                leftMax[i] = curMax;
            curMin = Math.min(leftMin[i], curMin);
            curMax = Math.max(leftMax[i], curMax);
        }
        
        int[] rightMin = new int[l];
        int[] rightMax = new int[l];
        rightMin[l-1] = nums[l-1];
        rightMax[l-1] = nums[l-1];
        
        for(int i = l-2; i>=0; i--){
            rightMin[i] = Math.min(rightMin[i+1]+nums[i], nums[i]);
            rightMax[i] = Math.max(rightMax[i+1]+nums[i], nums[i]);
        }
        
        curMin = rightMin[l-1];
        curMax = rightMax[l-1];
        
        for(int i = l-2; i>=0; i--){
            if(rightMin[i] > curMin)
                rightMin[i] = curMin;
            if(rightMax[i] < curMax)
                rightMax[i] = curMax;
            curMin = Math.min(rightMin[i], curMin);
            curMax = Math.max(rightMax[i], curMax);
        }
        
        int maxDiff = Integer.MIN_VALUE;
        
        for(int i = 0; i<l-1; i++){
            maxDiff = Math.max(maxDiff, Math.max(Math.abs(leftMin[i] - rightMax[i+1]), Math.abs(leftMax[i] - rightMin[i+1])));
        }
        return maxDiff;
    }
}

