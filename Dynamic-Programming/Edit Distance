public class Solution {
    /**
     * @param word1 & word2: Two string.
     * @return: The minimum number of steps.
     */
    public int minDistance(String s1, String s2) {
        if(s1 == null && s2==null) return 0;
        else if(s1.length() == 0 && s2.length() == 0) return 0;
        
        int m = s1.length();
        int n = s2.length();
        
        int[][] dp = new int[m+1][n+1];
        
        for(int i = 0; i<=m; i++)
            dp[i][0] = i;
        for(int j = 0; j<=n; j++)
            dp[0][j] = j;
        
        for(int i = 1; i<=m; i++){
            for(int j = 1; j<=n; j++){
                if(s1.charAt(i-1) == s2.charAt(j-1)){
                    dp[i][j] = dp[i-1][j-1];
                }else{
                    
                    int temp = Math.min(dp[i-1][j], dp[i][j-1]);
                    temp = Math.min(dp[i-1][j-1], temp);
                    dp[i][j] = 1+temp;
                }
            }
        }
        return dp[m][n];
    }
}
