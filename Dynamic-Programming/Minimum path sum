public class Solution {
    /**
     * @param grid: a list of lists of integers.
     * @return: An integer, minimizes the sum of all numbers along its path
     */
    public int minPathSum(int[][] grid) {
        if(grid == null) return 0;
        int m = grid.length;
        if(m == 0) return 0;
        int n = grid[0].length;
        
        int[][] dp = new int[m][n];
        dp[0][0] = grid[0][0];
        
        for(int col = 1; col<n; col++){
            dp[0][col] = dp[0][col-1]+grid[0][col];
        }
        
        for(int row = 1; row<m; row++){
            dp[row][0] = dp[row-1][0]+grid[row][0];
        }
        
        for(int i = 1; i<m; i++){
            for(int j = 1; j<n; j++){
                dp[i][j] = grid[i][j] + Math.min(dp[i-1][j], dp[i][j-1]);
            }
        }
        return dp[m-1][n-1];
    }
}
