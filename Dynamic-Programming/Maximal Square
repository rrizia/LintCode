public class Solution {
    /**
     * @param matrix: a matrix of 0 and 1
     * @return: an integer
     */
    public int maxSquare(int[][] matrix) {
        if(matrix == null || matrix.length == 0) return 0;
        int m = matrix.length;
        int n = matrix[0].length;
        
        int[][] dp = new int[m][n];
        int maxLen = 0;
        for(int i = 0; i<m; i++){
            if(matrix[i][0] == 1){
                dp[i][0] = 1;
                maxLen = Math.max(maxLen, dp[i][0]);
            }
            
        }
        
        for(int j = 0; j<n; j++){
            if(matrix[0][j] == 1){
                dp[0][j] = 1;
                maxLen = Math.max(maxLen, dp[0][j]);
            }
        }
        
        for(int i = 1; i<m; i++){
            for(int j = 1; j<n; j++){
                if(matrix[i][j] == 1){
                    dp[i][j] = Math.min(Math.min(dp[i-1][j], dp[i][j-1]), dp[i-1][j-1])+1;
                }else{
                    dp[i][j] = 0;
                }
                maxLen = Math.max(maxLen, dp[i][j]);
            }
        }
        return maxLen*maxLen;
    }
}
